version: "3.8"

networks:
  nginx-node:
    driver: bridge

services:
  node-api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: node-api
    volumes:
      - ./api:/usr/nodeapi/app
    entrypoint: dockerize -wait tcp://mysql:3306 -timeout 240s sh -c "npm install && npm run start"
    networks:
      - nginx-node
    environment:
      PORT: 3000
      MYSQL_PORT: 3306
      MYSQL_HOST: mysql
      MYSQL_USER: fcdockerdbuser
      MYSQL_PASSWORD: fcdockerdbpwd
      MYSQL_DATABASE: fcdockerdb

  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    networks:
      - nginx-node
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: fcdockerdb
      MYSQL_USER: fcdockerdbuser
      MYSQL_PASSWORD: fcdockerdbpwd
    volumes:
      - ./migration.sql:/tmp/migration.sql
      - ./.docker/mysql:/var/lib/mysql
    command: "--init-file=/tmp/migration.sql"

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "8080:80"
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/proxy.conf:/etc/nginx/proxy.conf
    networks:
      - nginx-node
